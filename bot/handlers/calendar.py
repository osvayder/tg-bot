from datetime import datetime, timedelta
from zoneinfo import ZoneInfo
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import calendar


def build_calendar_kb(current_date: datetime) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
    –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–Ω–∏ < —Å–µ–≥–æ–¥–Ω—è
    """
    kb_rows = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º
    month_year = current_date.strftime("%B %Y")
    kb_rows.append([
        InlineKeyboardButton(text="‚óÄ", callback_data=f"cal:prev:{current_date.strftime('%Y-%m')}"),
        InlineKeyboardButton(text=month_year, callback_data="cal:ignore"),
        InlineKeyboardButton(text="‚ñ∂", callback_data=f"cal:next:{current_date.strftime('%Y-%m')}")
    ])
    
    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    weekdays = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    kb_rows.append([
        InlineKeyboardButton(text=day, callback_data="cal:ignore")
        for day in weekdays
    ])
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    today = datetime.now(current_date.tzinfo).date()
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    cal = calendar.monthcalendar(current_date.year, current_date.month)
    
    for week in cal:
        week_row = []
        for day in week:
            if day == 0:
                # –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
                week_row.append(InlineKeyboardButton(text=" ", callback_data="cal:ignore"))
            else:
                # –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                date_obj = datetime(current_date.year, current_date.month, day).date()
                
                if date_obj < today:
                    # –ü—Ä–æ—à–µ–¥—à–∏–µ –¥–Ω–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
                    week_row.append(InlineKeyboardButton(text="¬∑", callback_data="cal:ignore"))
                elif date_obj == today:
                    # –°–µ–≥–æ–¥–Ω—è –≤—ã–¥–µ–ª—è–µ–º
                    week_row.append(InlineKeyboardButton(
                        text=f"[{day}]",
                        callback_data=f"cal:{date_obj.strftime('%Y-%m-%d')}"
                    ))
                else:
                    # –ë—É–¥—É—â–∏–µ –¥–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
                    week_row.append(InlineKeyboardButton(
                        text=str(day),
                        callback_data=f"cal:{date_obj.strftime('%Y-%m-%d')}"
                    ))
        kb_rows.append(week_row)
    
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
    kb_rows.append([
        InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data=f"cal:{today.strftime('%Y-%m-%d')}"),
        InlineKeyboardButton(text="üìÜ –ó–∞–≤—Ç—Ä–∞", callback_data=f"cal:{(today + timedelta(days=1)).strftime('%Y-%m-%d')}")
    ])
    
    # –û—Ç–º–µ–Ω–∞
    kb_rows.append([
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cal:cancel")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=kb_rows)


def build_time_kb(step_minutes: int = 30) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
    """
    kb_rows = []
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —à–∞–≥–æ–º
    times = []
    current_hour = 0
    current_minute = 0
    
    while current_hour < 24:
        times.append(f"{current_hour:02d}:{current_minute:02d}")
        current_minute += step_minutes
        if current_minute >= 60:
            current_minute = 0
            current_hour += 1
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ 4 –∫–Ω–æ–ø–∫–∏
    for i in range(0, len(times), 4):
        row = []
        for time_str in times[i:i+4]:
            row.append(InlineKeyboardButton(
                text=time_str,
                callback_data=f"time:{time_str}"
            ))
        kb_rows.append(row)
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞
    kb_rows.append([
        InlineKeyboardButton(text="üåÖ 09:00", callback_data="time:09:00"),
        InlineKeyboardButton(text="‚òÄÔ∏è 12:00", callback_data="time:12:00"),
        InlineKeyboardButton(text="üåá 18:00", callback_data="time:18:00"),
        InlineKeyboardButton(text="üåô 23:59", callback_data="time:23:59")
    ])
    
    # –û—Ç–º–µ–Ω–∞
    kb_rows.append([
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cal:cancel")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=kb_rows)