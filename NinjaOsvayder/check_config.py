#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Ninja Osvayder Bot")
    print("=" * 50)
    
    errors = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    python_version = sys.version_info
    print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {python_version.major}.{python_version.minor}.{python_version.micro}")
    if python_version.major < 3 or (python_version.major == 3 and python_version.minor < 8):
        errors.append("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if telegram_token and telegram_token != 'YOUR_TELEGRAM_BOT_TOKEN_HERE':
        print(f"‚úÖ Telegram —Ç–æ–∫–µ–Ω: {'*' * 10}{telegram_token[-4:]}")
    else:
        errors.append("‚ùå Telegram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Google credentials
    google_creds = os.getenv('GOOGLE_APPLICATION_CREDENTIALS', 'google-credentials.json')
    if Path(google_creds).exists():
        print(f"‚úÖ Google credentials: {google_creds}")
    else:
        errors.append(f"‚ùå Google credentials —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {google_creds}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Gemini API –∫–ª—é—á–∞
    gemini_key = os.getenv('GEMINI_API_KEY')
    if gemini_key:
        print(f"‚úÖ Gemini API –∫–ª—é—á: {'*' * 10}{gemini_key[-4:]}")
    else:
        warnings.append("‚ö†Ô∏è  Gemini API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –±—É–¥—É—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ffmpeg
    import subprocess
    try:
        result = subprocess.run(['ffmpeg', '-version'], capture_output=True, text=True)
        if result.returncode == 0:
            ffmpeg_version = result.stdout.split('\n')[0]
            print(f"‚úÖ ffmpeg: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            warnings.append("‚ö†Ô∏è  ffmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except FileNotFoundError:
        warnings.append("‚ö†Ô∏è  ffmpeg –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∏–¥–µ–æ)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    temp_dir = Path('temp_files')
    transcripts_dir = Path('transcripts')
    
    if not temp_dir.exists():
        temp_dir.mkdir(exist_ok=True)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è temp_files/")
    else:
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è temp_files/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    if not transcripts_dir.exists():
        transcripts_dir.mkdir(exist_ok=True)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è transcripts/")
    else:
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è transcripts/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤:")
    required_packages = [
        'telegram',
        'google.cloud.speech_v1',
        'dotenv',
        'pydub',
        'moviepy',
        'aiofiles'
    ]
    
    for package in required_packages:
        try:
            __import__(package.split('.')[0])
            print(f"  ‚úÖ {package}")
        except ImportError:
            errors.append(f"  ‚ùå –ü–∞–∫–µ—Ç {package} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 50)
    
    if errors:
        print("\n‚ùå –û–®–ò–ë–ö–ò (—Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è):")
        for error in errors:
            print(f"  {error}")
    
    if warnings:
        print("\n‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"  {warning}")
    
    if not errors:
        print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞.")
        print("\n–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("  python3 bot.py")
        print("\n–∏–ª–∏")
        print("  ./run.sh")
    else:
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞.")
        return 1
    
    return 0

if __name__ == '__main__':
    exit(check_config())
